{"version":3,"file":"static/js/850.2ea33af9.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,IAAH,6CAGTC,EAAQD,EAAAA,GAAAA,GAAH,2D,gKCGZE,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJG,QAAQ,4CAA6C,CACpDC,QAAS,wBAEVC,SAAS,uBACZC,SAAUN,EAAAA,KACPO,IAAI,EAAG,sCACPJ,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBA,QAAQ,QAAS,yCACjBE,SAAS,4BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,UAAC,IAAD,YACG,SAAC,IAAD,qBACD,SAAC,KAAD,CACEC,cAAe,CACbT,MAAO,GACPI,SAAU,IAEZM,iBAAkBb,EAClBc,SAhBe,SAACC,EAAQC,GAC5BC,QAAQC,IAAIH,GACZL,GAASS,EAAAA,EAAAA,IAAMJ,IACfC,EAAQI,WACT,EAMG,UAQE,UAAC,KAAD,YACA,SAACC,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACI,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAASC,UAAWC,EAAAA,EAC3CC,MAAM,QACNC,WAAW,qBACXC,MAAO,CAACC,MAAO,UAGpB,SAACT,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACG,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,WAAYC,UAAWC,EAAAA,EACjDC,MAAM,WACNE,MAAO,CAACC,MAAO,UAEnB,SAACT,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACA,SAACS,EAAA,EAAD,CAAQR,KAAK,SAASS,GAAI,CAACV,OAAQ,GAC/BW,QAAQ,YACRC,MAAM,UACNL,MAAO,CAAEC,MAAO,KAHpB,4BAST,E,UC/Dc,SAASK,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAC3B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/LogInForm/LogInForm.jsx","pages/LogIn.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\ntext-align: center;\n`\nexport const Title = styled.h1`\nfont-family: 'Roboto', sans-serif;\n`\n\n\n\n\n\n\n//import { Form as FormikForm } from 'formik';\n// export const Formm = styled(FormikForm)`\n// `\n\n","import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Box, Button } from '@mui/material';\nimport { TextField } from 'formik-mui';\nimport { Container, Title } from 'components/RegisterForm/RegisterForm.styled';\n\nconst LogInSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, {\n      message: 'Email is not valid.',\n    })\n    .required('Please, enter email'),\n  password: Yup.string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    .required('Please, enter password'),\n});\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    console.log(values)\n    dispatch(logIn(values))\n    actions.resetForm();\n  }\n\n\n  return (\n    <Container>\n       <Title>Login</Title>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LogInSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n        <Box margin={1}>\n            <Field type=\"email\" name=\"email\"  component={TextField}\n              label=\"Email\"\n              helperText=\"Please Enter Email\"\n              style={{width: 400}} />\n          </Box>\n\n         <Box margin={1}>\n            <Field type=\"password\" name=\"password\"  component={TextField}\n              label=\"Password\"\n              style={{width: 400}} />\n          </Box>\n          <Box margin={1}>\n          <Button type=\"submit\" sx={{margin: 2}}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ width: 400 }}>LogIn</Button>\n          </Box>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function LogIn() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LogInForm />\n    </div>\n  );\n}\n"],"names":["Container","styled","Title","LogInSchema","Yup","shape","email","matches","message","required","password","min","LogInForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","console","log","logIn","resetForm","Box","margin","type","name","component","TextField","label","helperText","style","width","Button","sx","variant","color","LogIn","Helmet"],"sourceRoot":""}