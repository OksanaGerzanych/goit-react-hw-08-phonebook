{"version":3,"file":"static/js/198.ae779c0b.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/GlobalStyle.js","components/Layout.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\ntext-align: center;\n`\nexport const Title = styled.h1`\nfont-family: 'Roboto', sans-serif;\n`\n\n\n\n\n\n\n//import { Form as FormikForm } from 'formik';\n// export const Formm = styled(FormikForm)`\n// `\n\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterContacts) => {\n    if (!filterContacts) return contacts;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContacts.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n`\n\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux/es/exports';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {Form} from 'components/ContactForm/ContactForm.styled';\nimport { Box, Button } from '@mui/material';\nimport { TextField } from 'formik-mui';\nimport { Container } from 'components/RegisterForm/RegisterForm.styled';\n\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, {\n      message:\n        'Invalid name. Name may contain only letters, apostrophe, dash and spaces.',\n    })\n    .required('Please, enter contact name'),\n  number: Yup.string()\n    .matches( /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n, {\n      message: 'Phone number is not valid.',\n    })\n    .required('Please, enter phone number'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n   \n    const existstName = contacts.find(contact => contact.name === values.name);\n  \n    if (existstName) {\n      return Notify.info(`This name is already in contacts!`);\n    }\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={ContactSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n         <Box margin={1}>\n            <Field type=\"text\" name=\"name\" component={TextField}\n              label=\"Name\"\n              helperText=\"Please Enter Name\"\n              style={{width: 400}}/>\n           </Box>\n          <Box margin={1}>\n            <Field type=\"tel\" name=\"number\" component={TextField}\n              label=\"Number\"\n              helperText=\"Please Enter Number\"\n              style={{width: 400}}/>\n          </Box>\n          <Box margin={1}>\n            <Button type=\"submit\" sx={{margin: 2}}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ width: 400 }}>\n              Add contact</Button>\n          </Box>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Box from '@mui/material/Box';\n\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\n\nimport FolderIcon from '@mui/icons-material/Folder';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\n\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box sx={{ flexGrow: 2, maxWidth: 400 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <FolderIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={name}\n              secondary={number}\n            />\n            <IconButton  aria-label=\"delete\" type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n          ,\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\n\n\n\n\n    // <Item>\n    //   {name}:{number}\n    //   <ButtonDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n    //     Delete\n    //   </ButtonDelete>\n    //   </Item>","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ntext-align: center;\nmargin-top: 10px;\n`","import React from 'react';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux/es/exports';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\n\nexport const ContactList = () => {\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n text-align: center;\n`;\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nimport { FilterContainer } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n  const handleFilterChange = event =>\n    dispatch(setFilterContacts(event.target.value));\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <FilterContainer>\n        <TextField\n          type=\"search\"\n          value={filter}\n          onChange={handleFilterChange}\n          id=\"filled-search\"\n          label=\"Search\"\n          variant=\"filled\"\n          style={{ width: 400 }}\n        />\n      </FilterContainer>\n    </Box>\n  );\n};\n","import { createGlobalStyle }  from 'styled-components'\nimport 'modern-normalize';\nexport const GlobalStyle = createGlobalStyle`\nbody {\n background-color: \t#EFEFEF;\n  margin: 0px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\np, h1, h2, ul {\n  margin: 0;\n}\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n`","import styled from \"styled-components\";\n\nexport const Layout = styled.div`\nmargin: 50px;\ntext-align: center;\n`;","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { GlobalStyle } from '../components/GlobalStyle';\nimport { Layout } from '../components/Layout';\nimport { useDispatch, useSelector  } from 'react-redux'; \nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <GlobalStyle />\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <b>Request in progress...</b>}\n    </Layout>\n  );\n}\n"],"names":["Container","styled","Title","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterContacts","contact","name","toLowerCase","includes","Form","FormikForm","ContactSchema","Yup","shape","matches","message","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","find","Notify","addContact","resetForm","Box","margin","type","component","TextField","label","helperText","style","width","Button","sx","variant","color","ContactListItem","id","flexGrow","maxWidth","Grid","container","spacing","item","xs","md","ListItem","ListItemAvatar","Avatar","Folder","ListItemText","primary","secondary","IconButton","onClick","deleteContact","Delete","List","ContactList","visibleContacts","map","FilterContainer","Filter","m","noValidate","autoComplete","value","onChange","event","setFilterContacts","target","GlobalStyle","createGlobalStyle","Layout","Contacts","useEffect","fetchContacts"],"sourceRoot":""}